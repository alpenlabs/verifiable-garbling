[workspace]
members = [
  "crates/garble",
  "crates/circuit-lib",

  # binaries listed seperately
  "bin/validityproof",
  "bin/validityproof/core",
  "bin/validityproof/methods",
  "bin/validityproof/methods/guest",
  "bin/circuit-utils",
]
resolver = "2"

[workspace.package]
version = "0.0.1"
edition = "2024"
authors = ["Mukesh Tiwari <mukesh@alpenlabs.io>"]
description = "Verifiable Garbling"
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/alpenlabs/verifiable-garbling"
categories = [
  "cryptography::MPC",
  "cryptography::garbled Circuits",
  "cryptography::zero-knowledge proofs",
  "cryptography::zk-SNARKs",
]
keywords = [
  "garbled-circuits",
  "`verifiable-garbling`",
  "zk-SNARKs",
  "MPC",
  "zero-knowledge proofs",
]

[workspace.lints]
rust.missing_debug_implementations = "warn"
rust.rust_2018_idioms = { level = "deny", priority = -1 }
rust.unreachable_pub = "warn"
rust.unused_crate_dependencies = "deny"
rust.unused_must_use = "deny"
rust.unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(coverage, coverage_nightly)',
] }
rust.missing_docs = "warn"
rustdoc.all = "warn"
clippy.too_long_first_doc_paragraph = "warn"

[workspace.dependencies]
anyhow = "1.0"
bytecheck = "0.8.1"
bytemuck = "1.23.1"
circuit-lib = { path = "crates/circuit-lib" }
clap = "4.1"
garble = { path = "crates/garble" }
garbling-methods = { path = "bin/validityproof/methods" }
rand = "0.9"
rand_chacha = "0.9.0"
risc0-build = "2.1.0"
risc0-zkvm = { git = "https://github.com/risc0/risc0.git", tag = "v2.0.2" }
rkyv = "0.8.10"
serde = "1.0"
serde_bytes = "0.11.17"
sha2 = "0.10.8"
tracing-subscriber = "0.3"
validityproof-core = { path = "bin/validityproof/core" }

[patch.crates-io]
sha2 = { git = "https://github.com/risc0/RustCrypto-hashes", tag = "sha2-v0.10.8-risczero.0" }

[profile.release]
opt-level = 3   # Optimized for speed
lto = true        # Enable Link Time Optimization
codegen-units = 1 # Reduced to increase optimizations
panic = "abort"   # Abort on panic
strip = "symbols" # Strip symbols from binary
